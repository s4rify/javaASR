<?xml version="1.0" encoding="UTF-8"?><testrun name="UT_ASR_Proc_Utils.smokeTestComplete" project="ASR_Tests" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testcase name="smokeTestComplete" classname="com.asr.sab.proc.UT_ASR_Proc_Utils" time="0.059">
    <error>java.nio.file.NoSuchFileException: resource\firstTestset\calib_data_small.csv&#13;
	at sun.nio.fs.WindowsException.translateToIOException(Unknown Source)&#13;
	at sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)&#13;
	at sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)&#13;
	at sun.nio.fs.WindowsFileSystemProvider.newByteChannel(Unknown Source)&#13;
	at java.nio.file.Files.newByteChannel(Unknown Source)&#13;
	at java.nio.file.Files.newByteChannel(Unknown Source)&#13;
	at java.nio.file.spi.FileSystemProvider.newInputStream(Unknown Source)&#13;
	at java.nio.file.Files.newInputStream(Unknown Source)&#13;
	at java.nio.file.Files.newBufferedReader(Unknown Source)&#13;
	at java.nio.file.Files.lines(Unknown Source)&#13;
	at java.nio.file.Files.lines(Unknown Source)&#13;
	at com.asr.sab.debug.CSVReader.readDoublesFromFile2d(CSVReader.java:59)&#13;
	at com.asr.sab.debug.CSVReader.readDoublesFromFile2d(CSVReader.java:51)&#13;
	at com.asr.sab.proc.UT_ASR_Proc_Utils.smokeTestComplete(UT_ASR_Proc_Utils.java:295)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)&#13;
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
  </testcase>
</testrun>
