<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract method &apos;private double [] [] extracted(double [] [] calibData, int C, int S)&apos; from &apos;com.asr.sab.cal.ASR_Calibration.calibrate()&apos; to &apos;com.asr.sab.cal.ASR_Calibration&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.asr.sab.cal.ASR_Calibration&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.asr.sab.cal{ASR_Calibration.java" name="extracted" replace="false" selection="5429 385" stamp="1511176698396" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;paddedData&apos; in &apos;com.asr.sab.utils.Proc_Utils.filter_data(...)&apos; to &apos;data&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Proc_Utils.filter_data(double[][], double[], double[]).paddedData&apos;&#x0A;- Renamed element: &apos;paddedData&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;paddedData&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Proc_Utils.java[Proc_Utils~filter_data~\[\[D~\[D~\[D@paddedData!9570!9590!9581!9590!\[\[D!0!true" name="data" references="true" stamp="1511179614892" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.asr.sab.utils.Proc_Utils.filter_data(...)&apos; to &apos;filter_data_250&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Proc_Utils.filter_data(...)&apos;&#x0A;- Renamed element: &apos;com.asr.sab.utils.Proc_Utils.filter_data_250(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;filter_data&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.asr.sab.utils{Proc_Utils.java[Proc_Utils~filter_data~\[\[D~\[D~\[D" name="filter_data_250" references="true" stamp="1511180720414" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;Vordered&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_thresholdMatrix(...)&apos; to &apos;ordered_V&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_thresholdMatrix(double[][], double[][], double, double).Vordered&apos;&#x0A;- Renamed element: &apos;Vordered&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;Vordered&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_thresholdMatrix~\[\[D~\[\[D~D~D@Vordered!3726!3756!3737!3744!QRealMatrix;!0!false" name="ordered_V" references="true" stamp="1511183152551" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;Xr&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_thresholdMatrix(...)&apos; to &apos;Xt&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_thresholdMatrix(double[][], double[][], double, double).Xr&apos;&#x0A;- Renamed element: &apos;Xr&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;Xr&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_thresholdMatrix~\[\[D~\[\[D~D~D@Xr!3450!3522!3461!3462!QRealMatrix;!0!false" name="Xt" references="true" stamp="1511183340699" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static double [] [] extracted(double [] [] X, EigenDecomposition eig_M)&apos; from &apos;com.asr.sab.utils.Calib_Utils.calculate_thresholdMatrix()&apos; to &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java" name="extracted" replace="false" selection="3462 555" stamp="1511183921798" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private static RealMatrix extracted(RealMatrix V)&apos; from &apos;com.asr.sab.utils.Calib_Utils.compute_component_activations()&apos; to &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java" name="extracted" replace="false" selection="5562 192" stamp="1511184124873" version="1.0" visibility="2"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;asr_jar&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.debug.CalibrationTest.java&apos;" description="Delete element" element1="/src&lt;com.asr.sab.debug{CalibrationTest.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1511186091911" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;r&apos; in &apos;com.asr.sab.utils.MyMatrixUtils.calculate_RMS(...)&apos; to &apos;s&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.MyMatrixUtils.calculate_RMS(double[][], double, int).r&apos;&#x0A;- Renamed element: &apos;r&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;r&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{MyMatrixUtils.java[MyMatrixUtils~calculate_RMS~\[\[D~D~I@r!10534!10542!10538!10538!I!0!false" name="s" references="true" stamp="1511187967373" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;sumSquareRoot&apos; in &apos;com.asr.sab.utils.MyMatrixUtils.calculate_RMS(...)&apos; to &apos;squaredElements&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.MyMatrixUtils.calculate_RMS(double[][], double, int).sumSquareRoot&apos;&#x0A;- Renamed element: &apos;sumSquareRoot&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;sumSquareRoot&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{MyMatrixUtils.java[MyMatrixUtils~calculate_RMS~\[\[D~D~I@sumSquareRoot!10441!10484!10452!10464!\[\[D!0!false" name="squaredElements" references="true" stamp="1511187990971" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;com.asr.sab.utils.MyGamma&apos; to &apos;CERNGamma&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.MyGamma&apos;&#x0A;- Renamed element: &apos;com.asr.sab.utils.CERNGamma&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;MyGamma&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;com.asr.sab.utils{MyGamma.java[MyGamma" matchStrategy="1" name="CERNGamma" qualified="false" references="true" similarDeclarations="false" stamp="1511272483533" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;c&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos; to &apos;col&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(double[]).c&apos;&#x0A;- Renamed element: &apos;c&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;c&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_robustMean~\[D@c!7583!7591!7587!7587!I!0!false" name="col" references="true" stamp="1511344953139" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private static void extracted(double [] [] H, double nbins)&apos; from &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean()&apos; to &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java" name="extracted" replace="false" selection="8206 522" stamp="1511362255733" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;H&apos; in &apos;com.asr.sab.utils.Calib_Utils.histc(...)&apos; to &apos;data&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.histc(double[][], double).H&apos;&#x0A;- Renamed element: &apos;H&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;H&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~histc~\[\[D~D@H!8313!8324!8324!8324!\[\[D!0!true" name="data" references="true" stamp="1511362303660" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;nbins&apos; in &apos;com.asr.sab.utils.Calib_Utils.histc(...)&apos; to &apos;binCount&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.histc(double[][], double).nbins&apos;&#x0A;- Renamed element: &apos;nbins&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;nbins&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~histc~\[\[D~D@nbins!8366!8377!8373!8377!D!0!true" name="binCount" references="true" stamp="1511362336274" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private static void extracted(double [] [] X, int m, double [] [] H, double nbins)&apos; from &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean()&apos; to &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java" name="extracted" replace="false" selection="7688 516" stamp="1511362510898" version="1.0" visibility="2"/>&#x0A;&#x0A;<refactoring comment="Rename method &apos;com.asr.sab.utils.Calib_Utils.histc(...)&apos; to &apos;histcLog&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.histc(...)&apos;&#x0A;- Renamed element: &apos;com.asr.sab.utils.Calib_Utils.histcLog(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;histc&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~histc~\[\[D~I" name="histcLog" references="true" stamp="1511432770570" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;pMinuslogq&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos; to &apos;kl&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(double[]).pMinuslogq&apos;&#x0A;- Renamed element: &apos;pMinuslogq&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;pMinuslogq&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_robustMean~\[D@pMinuslogq!8938!9001!8949!8958!\[\[D!0!false" name="kl" references="true" stamp="1511439990756" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;kl&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos; to &apos;kltmp&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(double[]).kl&apos;&#x0A;- Renamed element: &apos;kl&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;kl&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_robustMean~\[D@kl!10065!10120!10076!10077!\[\[D!0!false" name="kltmp" references="true" stamp="1511512023788" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;kltmp&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos; to &apos;tmp&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(double[]).kltmp&apos;&#x0A;- Renamed element: &apos;kltmp&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;kltmp&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_robustMean~\[D@kltmp!10065!10123!10076!10080!\[\[D!0!false" name="tmp" references="true" stamp="1511512134390" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;sum&apos; in &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos; to &apos;kl&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(double[]).sum&apos;&#x0A;- Renamed element: &apos;sum&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;sum&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_robustMean~\[D@sum!10305!10346!10314!10316!\[D!0!false" name="kl" references="true" stamp="1511512140454" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static double [] extracted(int m, double [] [] logq, double [] p)&apos; from &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean()&apos; to &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.asr.sab.utils.Calib_Utils&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java" name="extracted" replace="false" selection="10023 539" stamp="1511512658624" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos; to &apos;calculate_robust_statistics&apos;&#x0A;- Original project: &apos;asr_jar&apos;&#x0A;- Original element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robustMean(...)&apos;&#x0A;- Renamed element: &apos;com.asr.sab.utils.Calib_Utils.calculate_robust_statistics(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;calculate_robustMean&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.asr.sab.utils{Calib_Utils.java[Calib_Utils~calculate_robustMean~\[D" name="calculate_robust_statistics" references="true" stamp="1511520939135" version="1.0"/>
</session>